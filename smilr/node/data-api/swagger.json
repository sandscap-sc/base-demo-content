{
  "swagger": "2.0",
  "info": {
    "version": "3.2.0",
    "title": "Smilr API",
    "description": "REST API for data access microservice of the Smilr app",
    "contact": {
      "name": "Ben Coleman",
      "email": "ben.coleman@microsoft.com"
    },
    "license": {
      "name": "Apache 2.0"
    }
  },
  "basePath": "/api",
  "schemes": [
    "http", 
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "X-Secret": {
      "type": "apiKey",
      "in": "header",
      "name": "X-SECRET"
    }
  },
  "paths": {
    "/events/filter/{time}": {
      "get": {
        "tags": ["Events"],
        "description": "Returns events filtered to a given time frame",
        "operationId": "getFilteredEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "time",
            "in": "path",
            "description": "Time frame to get events for (active, future or past)",
            "required": true,
            "type": "string",
            "enum": ["active", "future", "past"]
          }
        ],
        "responses": {
          "200": {
            "description": "Array of events",
            "schema": {
              "$ref": "#/definitions/Events"
            }            
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      }        
    },
    "/events": {
      "get": {
        "tags": ["Events"],
        "description": "Returns **all** events from the system, use with caution",
        "operationId": "getAllEvents",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Array of events",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      },
      "post": {
        "tags": ["Events"],
        "description": "Create a new event",
        "operationId": "createEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }            
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created event"
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "tags": ["Events"],
        "description": "Update an existing event",
        "operationId": "updateEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Event object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }            
          }
        ],
        "responses": {
          "200": {
            "description": "The updated event"
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      } 
    },
    "/events/{id}": {
      "get": {
        "tags": ["Events"],
        "description": "Returns single event with given id",
        "operationId": "getEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the event, e.g. evt002",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single event object",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "description": "Delete an event",
        "operationId": "deleteEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the event, e.g. evt002",
            "required": true,
            "type": "string"            
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation message"
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      }     
    },
    "/feedback/{eventId}/{topicId}": {
      "get": {
        "tags": ["Feedback"],
        "description": "Get the feedback for given event and topic IDs",
        "operationId": "getFeedback",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "Id of event you want feedback for",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicId",
            "in": "path",
            "description": "Numeric id of the topic",
            "required": true,
            "type": "integer"
          }          
        ],        
        "responses": {
          "200": {
            "description": "Array of feedback"
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      }     
    },
    "/feedback": {
      "post": {
        "tags": ["Feedback"],
        "description": "Send feedback",
        "operationId": "sendFeedback",
        "produces": [
          "application/json"
        ],        
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Feedback object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feedback"
            }            
          }
        ],
        "responses": {
          "200": {
            "description": "The new feedback object"
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      }     
    },
    "/info": {
      "get": {
        "tags": ["Other"],
        "description": "Get system information, useful for debugging",
        "operationId": "systemInfo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "System info object",
            "schema": {
              "$ref": "#/definitions/SystemInfo"
            }
          },
          "400": {
            "description": "Unexpected error"
          }
        }
      }     
    }   
  },
  "definitions": {
    "Feedback": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "example": "evt001"
        },
        "topic": {
          "type": "integer",
          "example": 1
        },
        "rating": {
          "type": "integer",
          "enum": [1,2,3,4,5],
          "example": 3
        },
        "comment": {
          "type": "string",
          "example": "This was a good session, I learned a lot"
        } 
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "eB60xQ"
        },
        "title": {
          "type": "string",
          "example": "An event about an interesting thing"
        },
        "type": {
          "type": "string",
          "enum": ["event", "workshop", "hack", "lab"],
          "example": "workshop"
        },
        "start": {
          "type": "string",
          "example": "2018-02-17"
        },
        "end": {
          "type": "string",
          "example": "2018-02-19"
        },
        "topics": {
          "type": "array",
          "example": [
            {"id": 1, "desc": "This is a topic"}
          ]
        }
      }
    },
    "Events": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Event"
      }
    },    
    "SystemInfo": {
      "type": "object",
      "properties": {
        "version":  { "type": "string",  "example": "myhost001" },
        "hostname":  { "type": "string",  "example": "myhost001" },
        "container": { "type": "boolean", "example": true },
        "osType":    { "type": "string",  "example": "Linux" },
        "osRelease": { "type": "string",  "example": "4.4.0-43-Microsoft" },
        "arch":      { "type": "string",  "example": "x64" },
        "cpuModel":  { "type": "string",  "example": "Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz" },
        "cpuCount":  { "type": "integer", "example": 4 },
        "memory":    { "type": "integer", "example": 16310 },
        "nodeVer":   { "type": "string",  "example": "v8.9.3" },
        "buildInfo":   { "type": "string",  "example": "Azure DevOps build 20180513.8 from branch refs/heads/master" },
        "releaseInfo": { "type": "string",  "example": "Release-4" },
        "cosmosDb":    { "type": "object",  "example": {"connected": true, "host": "mongodb002", "port": 27017, "driverVer": "2.2.35"} }
      }
    }    
  }
}
